.TH VDOFORMAT 8 "2017-09-12" "Red Hat" \" -*- nroff -*-
.SH NAME
vdoformat \- format a VDO device
.SH SYNOPSIS
.B vdoformat
.RI [ options... ]
.I filename
.SH DESCRIPTION
.B vdoformat
formats the file named by
.I filename
as a VDO device. This is analogous to low-level device formatting.
The device will not be formatted if it already contains a VDO, unless
the --force flag is used.
.PP
.B vdoformat
can also modify some of the formatting parameters.
.SH OPTIONS
.TP
.B \-\-format
Format the block device, even if there is already a VDO formatted thereupon.
.TP
.B \-\-help
Print this help message and exit.
.TP
.B \-\-logical\-size=\fIsize\fP
Set the logical (provisioned) size of the VDO device to \fIsize\fP.
A size suffix of K for kilobytes, M for megabytes, G for
gigabytes, T for terabytes, or P for petabytes is optional. The
default unit is megabytes.
.TP
.B \-\-slab\-bits=\fIbits\fP
Set the free space allocator's slab size to 2^\fIbits\fP 4 KB blocks.
\fIbits\fP must be a value between 13 and 23 (inclusive), corresponding
to a slab size between 32 MB and 32 GB. The default value is 19
which results in a slab size of 2 GB. This allocator manages the
space VDO uses to store user data.

The maximum number of slabs in the system is 8192, so this value
determines the maximum physical size of a VDO volume. One slab is
the minimum amount by which a VDO volume can be grown. Smaller
slabs also increase the potential for parallelism if the device
has multiple physical threads. Therefore, this value should be set
as small as possible, given the eventual maximal size of the
volume.
.TP
.B \-\-uds\-memory\-size=\fIgigabytes\fP
Specify the amount of memory, in gigabytes, to devote to the
index. Accepted options are .25, .5, .75, and all positive
integers.
.TP
.B \-\-uds\-sparse
Specify whether or not to use a sparse index.
.TP
.B \-\-verbose
Describe what is being formatted and with what parameters.
.TP
.B \-\-version
Show the version of vdoformat.
.
.\" .SH EXAMPLES
.\" .SH NOTES
.SH SEE ALSO
.BR vdo (8).
